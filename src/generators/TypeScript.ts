import { Generator } from "./Generator";
import { logger } from "../Logger";
import { camelize } from "inflected";
import {
  ModuleDeclaration,
  Project,
  IndentationText,
  NewLineKind,
} from "ts-morph";

export class TypeScript extends Generator {
  private project?: Project;

  async initialize(): Promise<undefined> {
    this.project = new Project({
      manipulationSettings: {
        indentationText: IndentationText.TwoSpaces,
        newLineKind: NewLineKind.LineFeed,
        useTrailingCommas: true,
      },
    });

    const sourceFile = this.project.createSourceFile(
      `fhir-${this.fhirVersion}.ts`,
      {
        statements: [
          `// Autogenerated by @hestia/resource generator.  Do not edit!`,
          "// cspell: disable",
        ],
      }
    );

    const ns = sourceFile.addModule({
      name: camelize(`fhir_${this.fhirVersion}`),
    });

    return;
  }

  async generateStructure(sd: fhir5.StructureDefinition): Promise<undefined> {
    return;
  }
}
